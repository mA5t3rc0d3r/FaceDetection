/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package facedetection;
import java.awt.Color;
import static java.awt.Frame.NORMAL;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.event.WindowAdapter;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFrame;
import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.core.MatOfByte;
import org.opencv.core.MatOfRect;
import org.opencv.core.Point;
import org.opencv.core.Rect;
import org.opencv.core.Scalar;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;
import org.opencv.objdetect.CascadeClassifier;
import org.opencv.videoio.VideoCapture;
/**
 *
 * @author Akshay Bisht
 */
public class FaceDetect extends javax.swing.JFrame {

    private thread thread1 = null;
    VideoCapture cap = null;
    Mat frame = new Mat();
    MatOfRect faces = new MatOfRect();
    MatOfByte mob = new MatOfByte();
    String fileExten = ".png";
    CascadeClassifier faceDetect = new CascadeClassifier("C:\\Users\\Akshay Bisht\\Documents\\NetBeansProjects\\FaceDetection\\src\\facedetection\\haarcascade_frontalface_alt.xml");
    Mat matrix = new Mat();
    
    class thread implements Runnable {
    @Override
        public void run() {
             {
                while (true) {
                    if (cap.isOpened()) 
                    {
                        try 
                        {
                         cap.retrieve(matrix);
                         Graphics g = jPanel1.getGraphics();
                         faceDetect.detectMultiScale(matrix, faces);
                         System.out.println(String.format("Total faces Detected: %d", faces.toArray().length));
                         System.out.println(String.format("Credit5: m@5t3r_c0d3r"));
                         String text = String.format("Total faces Detected: %d", faces.toArray().length);
                         Imgproc.putText(matrix, text, new Point(15, 25), NORMAL, 0.7, new Scalar(255, 255, 255),2);
                         for (Rect rect : faces.toArray()) 
                         {
                          Imgproc.rectangle(matrix,new Point(rect.x, rect.y), new Point(rect.x + rect.width, rect.y + rect.height),new Scalar(0, 255, 0),2);
                          Imgproc.putText(matrix, String.format("%d x %d", rect.width,rect.height), new Point(rect.x+30, rect.y+rect.height+2), NORMAL, 0.5, new Scalar(0, 255, 0));
                         }
                         Imgcodecs.imencode(fileExten, matrix, mob);
                         byte[] byteArray = mob.toArray();
                         BufferedImage buff = null;
                         InputStream in;
                         in = new ByteArrayInputStream(byteArray);
                         buff = ImageIO.read(in);
                         g.drawImage(buff, 0, 0, null);
                        } 
                        catch (IOException ex) 
                        {
                            Logger.getLogger(FaceDetect.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }

            }
        }

    }
    public FaceDetect() 
    {
        start();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 754, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 379, Short.MAX_VALUE)
        );

        jButton2.setText("Stop");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(361, 361, 361)
                        .addComponent(jButton2)))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jButton2)
                .addContainerGap(101, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        cap.release();
        
    }//GEN-LAST:event_jButton2ActionPerformed
private void start() 
{
    cap = new VideoCapture(0);
    thread1 = new thread();
    Thread t = new Thread(thread1);
    t.setDaemon(true);
    t.start();
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        System.out.println("Library loaded");
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FaceDetect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FaceDetect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FaceDetect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FaceDetect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() 
        {
            public void run() 
            {
                FaceDetect frame = new FaceDetect();
                frame.setTitle("Face Detection And Recognition");
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                new FaceDetect().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
